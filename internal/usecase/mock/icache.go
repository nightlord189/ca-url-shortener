// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nightlord189/ca-url-shortener/internal/usecase/adapters (interfaces: ICache)
//
// Generated by this command:
//
//	mockgen -destination=../mock/icache.go -package=mock github.com/nightlord189/ca-url-shortener/internal/usecase/adapters ICache
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockICache is a mock of ICache interface.
type MockICache struct {
	ctrl     *gomock.Controller
	recorder *MockICacheMockRecorder
}

// MockICacheMockRecorder is the mock recorder for MockICache.
type MockICacheMockRecorder struct {
	mock *MockICache
}

// NewMockICache creates a new mock instance.
func NewMockICache(ctrl *gomock.Controller) *MockICache {
	mock := &MockICache{ctrl: ctrl}
	mock.recorder = &MockICacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICache) EXPECT() *MockICacheMockRecorder {
	return m.recorder
}

// GetLink mocks base method.
func (m *MockICache) GetLink(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLink", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLink indicates an expected call of GetLink.
func (mr *MockICacheMockRecorder) GetLink(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLink", reflect.TypeOf((*MockICache)(nil).GetLink), arg0, arg1)
}

// PutLink mocks base method.
func (m *MockICache) PutLink(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutLink", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutLink indicates an expected call of PutLink.
func (mr *MockICacheMockRecorder) PutLink(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutLink", reflect.TypeOf((*MockICache)(nil).PutLink), arg0, arg1, arg2)
}
